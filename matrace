valgrind: ./monty: No such file or directory
valgrind: ./monty: No such file or directory
valgrind: ./monty: No such file or directory
valgrind: ./monty: No such file or directory
valgrind: ./monty: No such file or directory
==10073== Memcheck, a memory error detector
==10073== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10073== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10073== Command: ./monty bytecodes/00.m
==10073== 
==10073== 
==10073== HEAP SUMMARY:
==10073==     in use at exit: 0 bytes in 0 blocks
==10073==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10073== 
==10073== All heap blocks were freed -- no leaks are possible
==10073== 
==10073== For lists of detected and suppressed errors, rerun with: -s
==10073== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10074== Memcheck, a memory error detector
==10074== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10074== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10074== Command: ./monty bytecodes/06.m
==10074== 
==10074== 
==10074== HEAP SUMMARY:
==10074==     in use at exit: 0 bytes in 0 blocks
==10074==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10074== 
==10074== All heap blocks were freed -- no leaks are possible
==10074== 
==10074== For lists of detected and suppressed errors, rerun with: -s
==10074== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10075== Memcheck, a memory error detector
==10075== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10075== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10075== Command: ./monty bytecodes/07.m
==10075== 
==10075== 
==10075== HEAP SUMMARY:
==10075==     in use at exit: 0 bytes in 0 blocks
==10075==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10075== 
==10075== All heap blocks were freed -- no leaks are possible
==10075== 
==10075== For lists of detected and suppressed errors, rerun with: -s
==10075== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10076== Memcheck, a memory error detector
==10076== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10076== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10076== Command: ./monty bytecodes/09.m
==10076== 
==10076== 
==10076== HEAP SUMMARY:
==10076==     in use at exit: 0 bytes in 0 blocks
==10076==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10076== 
==10076== All heap blocks were freed -- no leaks are possible
==10076== 
==10076== For lists of detected and suppressed errors, rerun with: -s
==10076== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10077== Memcheck, a memory error detector
==10077== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10077== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10077== Command: ./monty bytecodes/12.m
==10077== 
==10077== 
==10077== HEAP SUMMARY:
==10077==     in use at exit: 0 bytes in 0 blocks
==10077==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10077== 
==10077== All heap blocks were freed -- no leaks are possible
==10077== 
==10077== For lists of detected and suppressed errors, rerun with: -s
==10077== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10124== Memcheck, a memory error detector
==10124== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10124== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10124== Command: ./monty bytecodes/00.m
==10124== 
==10124== 
==10124== HEAP SUMMARY:
==10124==     in use at exit: 0 bytes in 0 blocks
==10124==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10124== 
==10124== All heap blocks were freed -- no leaks are possible
==10124== 
==10124== For lists of detected and suppressed errors, rerun with: -s
==10124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10125== Memcheck, a memory error detector
==10125== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10125== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10125== Command: ./monty bytecodes/06.m
==10125== 
==10125== 
==10125== HEAP SUMMARY:
==10125==     in use at exit: 0 bytes in 0 blocks
==10125==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10125== 
==10125== All heap blocks were freed -- no leaks are possible
==10125== 
==10125== For lists of detected and suppressed errors, rerun with: -s
==10125== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10126== Memcheck, a memory error detector
==10126== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10126== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10126== Command: ./monty bytecodes/07.m
==10126== 
==10126== 
==10126== HEAP SUMMARY:
==10126==     in use at exit: 0 bytes in 0 blocks
==10126==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10126== 
==10126== All heap blocks were freed -- no leaks are possible
==10126== 
==10126== For lists of detected and suppressed errors, rerun with: -s
==10126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10127== Memcheck, a memory error detector
==10127== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10127== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10127== Command: ./monty bytecodes/09.m
==10127== 
==10127== 
==10127== HEAP SUMMARY:
==10127==     in use at exit: 0 bytes in 0 blocks
==10127==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10127== 
==10127== All heap blocks were freed -- no leaks are possible
==10127== 
==10127== For lists of detected and suppressed errors, rerun with: -s
==10127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10128== Memcheck, a memory error detector
==10128== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10128== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10128== Command: ./monty bytecodes/12.m
==10128== 
==10128== 
==10128== HEAP SUMMARY:
==10128==     in use at exit: 0 bytes in 0 blocks
==10128==   total heap usage: 7 allocs, 7 frees, 5,784 bytes allocated
==10128== 
==10128== All heap blocks were freed -- no leaks are possible
==10128== 
==10128== For lists of detected and suppressed errors, rerun with: -s
==10128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10129== Memcheck, a memory error detector
==10129== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10129== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10129== Command: ./monty bytecodes/add.m
==10129== 
==10129== 
==10129== HEAP SUMMARY:
==10129==     in use at exit: 0 bytes in 0 blocks
==10129==   total heap usage: 6 allocs, 6 frees, 5,760 bytes allocated
==10129== 
==10129== All heap blocks were freed -- no leaks are possible
==10129== 
==10129== For lists of detected and suppressed errors, rerun with: -s
==10129== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10130== Memcheck, a memory error detector
==10130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10130== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10130== Command: ./monty bytecodes/add_only.m
==10130== 
L1: can't add, stack too short
==10130== 
==10130== HEAP SUMMARY:
==10130==     in use at exit: 592 bytes in 2 blocks
==10130==   total heap usage: 3 allocs, 1 frees, 4,688 bytes allocated
==10130== 
==10130== LEAK SUMMARY:
==10130==    definitely lost: 0 bytes in 0 blocks
==10130==    indirectly lost: 0 bytes in 0 blocks
==10130==      possibly lost: 0 bytes in 0 blocks
==10130==    still reachable: 592 bytes in 2 blocks
==10130==         suppressed: 0 bytes in 0 blocks
==10130== Rerun with --leak-check=full to see details of leaked memory
==10130== 
==10130== For lists of detected and suppressed errors, rerun with: -s
==10130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10131== Memcheck, a memory error detector
==10131== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10131== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10131== Command: ./monty bytecodes/blanc.m
==10131== 
==10131== 
==10131== HEAP SUMMARY:
==10131==     in use at exit: 0 bytes in 0 blocks
==10131==   total heap usage: 3 allocs, 3 frees, 4,688 bytes allocated
==10131== 
==10131== All heap blocks were freed -- no leaks are possible
==10131== 
==10131== For lists of detected and suppressed errors, rerun with: -s
==10131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10132== Memcheck, a memory error detector
==10132== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10132== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10132== Command: ./monty bytecodes/d.m
==10132== 
L10: usage: push integer
==10132== 
==10132== HEAP SUMMARY:
==10132==     in use at exit: 616 bytes in 3 blocks
==10132==   total heap usage: 10 allocs, 7 frees, 5,856 bytes allocated
==10132== 
==10132== LEAK SUMMARY:
==10132==    definitely lost: 0 bytes in 0 blocks
==10132==    indirectly lost: 0 bytes in 0 blocks
==10132==      possibly lost: 0 bytes in 0 blocks
==10132==    still reachable: 616 bytes in 3 blocks
==10132==         suppressed: 0 bytes in 0 blocks
==10132== Rerun with --leak-check=full to see details of leaked memory
==10132== 
==10132== For lists of detected and suppressed errors, rerun with: -s
==10132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10133== Memcheck, a memory error detector
==10133== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10133== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10133== Command: ./monty bytecodes/err.m
==10133== 
L10: unknown instruction coucou
==10133== 
==10133== HEAP SUMMARY:
==10133==     in use at exit: 0 bytes in 0 blocks
==10133==   total heap usage: 11 allocs, 11 frees, 5,880 bytes allocated
==10133== 
==10133== All heap blocks were freed -- no leaks are possible
==10133== 
==10133== For lists of detected and suppressed errors, rerun with: -s
==10133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10134== Memcheck, a memory error detector
==10134== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10134== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10134== Command: ./monty bytecodes/julie.m
==10134== 
L7: usage: push integer
==10134== 
==10134== HEAP SUMMARY:
==10134==     in use at exit: 616 bytes in 3 blocks
==10134==   total heap usage: 9 allocs, 6 frees, 5,832 bytes allocated
==10134== 
==10134== LEAK SUMMARY:
==10134==    definitely lost: 0 bytes in 0 blocks
==10134==    indirectly lost: 0 bytes in 0 blocks
==10134==      possibly lost: 0 bytes in 0 blocks
==10134==    still reachable: 616 bytes in 3 blocks
==10134==         suppressed: 0 bytes in 0 blocks
==10134== Rerun with --leak-check=full to see details of leaked memory
==10134== 
==10134== For lists of detected and suppressed errors, rerun with: -s
==10134== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10135== Memcheck, a memory error detector
==10135== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10135== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10135== Command: ./monty bytecodes/julien.m
==10135== 
==10135== 
==10135== HEAP SUMMARY:
==10135==     in use at exit: 0 bytes in 0 blocks
==10135==   total heap usage: 11 allocs, 11 frees, 5,880 bytes allocated
==10135== 
==10135== All heap blocks were freed -- no leaks are possible
==10135== 
==10135== For lists of detected and suppressed errors, rerun with: -s
==10135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10136== Memcheck, a memory error detector
==10136== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10136== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10136== Command: ./monty bytecodes/monty.m
==10136== 
==10136== 
==10136== HEAP SUMMARY:
==10136==     in use at exit: 0 bytes in 0 blocks
==10136==   total heap usage: 11 allocs, 11 frees, 5,880 bytes allocated
==10136== 
==10136== All heap blocks were freed -- no leaks are possible
==10136== 
==10136== For lists of detected and suppressed errors, rerun with: -s
==10136== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10137== Memcheck, a memory error detector
==10137== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10137== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10137== Command: ./monty bytecodes/nop.m
==10137== 
==10137== 
==10137== HEAP SUMMARY:
==10137==     in use at exit: 0 bytes in 0 blocks
==10137==   total heap usage: 5 allocs, 5 frees, 5,736 bytes allocated
==10137== 
==10137== All heap blocks were freed -- no leaks are possible
==10137== 
==10137== For lists of detected and suppressed errors, rerun with: -s
==10137== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10138== Memcheck, a memory error detector
==10138== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10138== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10138== Command: ./monty bytecodes/nop_only.m
==10138== 
==10138== 
==10138== HEAP SUMMARY:
==10138==     in use at exit: 0 bytes in 0 blocks
==10138==   total heap usage: 3 allocs, 3 frees, 4,688 bytes allocated
==10138== 
==10138== All heap blocks were freed -- no leaks are possible
==10138== 
==10138== For lists of detected and suppressed errors, rerun with: -s
==10138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==10139== Memcheck, a memory error detector
==10139== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10139== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10139== Command: ./monty bytecodes/stack_short.m
==10139== 
==10139== 
==10139== HEAP SUMMARY:
==10139==     in use at exit: 0 bytes in 0 blocks
==10139==   total heap usage: 6 allocs, 6 frees, 5,760 bytes allocated
==10139== 
==10139== All heap blocks were freed -- no leaks are possible
==10139== 
==10139== For lists of detected and suppressed errors, rerun with: -s
==10139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
